6-8
클래스 변수(static) : width, height
instance : kind, num
지역변수 : k, n, card

6- 9

6-10
1. 모든 생성자의 이름은 클래스의 이름과 동일해야한다.
2. 생성자는 객체를 생성하기 위한 것 이다.
3. 클래스에는 생성자가 반드시 하나 이상 있어야 한다.
4. 생성자가 없는 클래스는 컴파일러가 기본 생성자를 추가한다.
5. 생성자는 오버로딩 할 수 없다.

2 - 생성자는 객체를 초기화 할 목적 객체를 생성하는것 은 뉴연산
5 - 생성자 오버로딩가능

6-11 다음 중 this에 대한 설명으로 맞지 않은 것은?
1. 객체 자신을 가리키는 참조변수이다.
2. 클래스 내에서라면 어디서든 사용할수있다.
3. 지역변수와 인스턴스변수를 구별할때 사용한다.
4. 클래스 매서드 내에서는 사용할수없다.

2 - 인스턴스 에서만 사용가능

6-12 다음 중 오버로딩이 성힙라기 위한 조건이 아닌 것은?
1. 메서드의 이름이 같아야한다
2 매개변수의 개수나 타입이 달라야 한다
3. 리턴 타입이 달라야한다.
4. 매개변수의 이름이 달라야한다.

3 -리턴타입은 오버로딩에 영향 ㄴ

6-13 다음중 add메서드를 올바르게 오버로딩 한것은?

long add(int a, int b) {return a+b;}

1. long add(int x, int y) {return x+y;}
2. long add(long a, long b) {return a+b;}
3. int add(byte a, byte b) {return a+b;}
4. int add(long a, int b) {return (int)(a+b);}

2,3,4

6-14 다음중 초기화에 대한 설명으로 옳지 않은 것은?

1. 멤버변수는 자동 초기화도므로 초기화하지 안호도 값을 참조 할 수 있다.
2. 지역변순는 사용하기 전에 반드시 초기화해야한다.
3. 초기화 블럭보다 생성자가 먼저 수행된다
4.명시적 초기화를 제일 우선적으로 고려해야 한다.
5. 클래스변수보다 인스턴스변수가 먼저 초기화 된다.

3 - 초기화가 먼저 수행
5 - 클래스변수가 먼저 초기화

6-15 다음중 인스턴스변수의 초기화 순서가 올바른 것은?

1 - 기본값 - 명시적초기화 - 초기화블럭 - 생성자

6 - 16 다음중 지역변수에 대한 설명으로 옳지 않은것은?
1. 자동 초기화되므로 별도의 초기화가 필요없다
2. 지역변수가 선언된 매서드가 종료되면 지역변수도 함꼐 소멸된다.
3. 매서드의 매개변수로 선언된 변수도 지역변수이다
4. 클래스 변수나 인스턴스변수보다 메모리 부담이 적다.
5. 힙(heap)영역에 생성되면 가비지 컬렉터에 의해 소멸된다.

1,5

6-17 호출스택이 다음과 같은 상활일때 옳지않은 설명은

1. 제일먼저 호출스택에 저장된것은 main메서드이다.
2. println메서드를 제외한 나머지 메서드들은 모두 종료된 상태이다.
3. medhod2메서드를 호출한것은 main 메서드이다.
4. println 메소드가 종료되면 method1 메서드가 수행을 재개한다.
5  main - method2 - method1 - println의 순서로 호출되었다.
6. 현재 실행중인 메서드는 println 뿐이다

4 - 호출 스택 제일 위가 현재 수행중인 메서드 나머지는 대기상태

